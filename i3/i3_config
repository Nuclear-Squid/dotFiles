#   ───────────────────< Human Readable Keyboard inputs >───────────────────
# 'leader' modifier
set $mod Mod4

# Top Row
set $kc_q 24
set $kc_w 25
set $kc_e 26
set $kc_r 27
set $kc_t 28
set $kc_y 29
set $kc_u 30
set $kc_i 31
set $kc_o 32
set $kc_p 33

# Home Row
set $kc_a 38
set $kc_s 39
set $kc_d 40
set $kc_f 41
set $kc_g 42
set $kc_h 43
set $kc_j 44
set $kc_k 45
set $kc_l 46
set $kc_semicolon 47

# Bottom Row
set $kc_z 52
set $kc_x 53
set $kc_c 54
set $kc_v 55
set $kc_b 56
set $kc_n 57
set $kc_m 58
set $kc_comma 59
set $kc_dot   60
set $kc_slash 61

#   ─────────────────< Stuff that uses apps I don’t have >───────────────
# Start XDG autostart .desktop files using dex. See also
# https://wiki.archlinux.org/index.php/XDG_Autostart
exec --no-startup-id dex --autostart --environment i3

# The combination of xss-lock, nm-applet and pactl is a popular choice, so
# they are included here as an example. Modify as you see fit.

# xss-lock grabs a logind suspend inhibit lock and will use i3lock to lock the
# screen before suspend. Use loginctl lock-session to lock your screen.
exec --no-startup-id xss-lock --transfer-sleep-lock -- i3lock --nofork

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id nm-applet

#   ───────────────────────────< Media buttons >─────────────────────────
# Use pactl to adjust volume in PulseAudio.
set $refresh_i3status killall -SIGUSR1 i3status
bindsym XF86AudioRaiseVolume  exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@   +5%    && $refresh_i3status
bindsym XF86AudioLowerVolume  exec --no-startup-id pactl set-sink-volume @DEFAULT_SINK@   -5%    && $refresh_i3status
bindsym XF86AudioMute         exec --no-startup-id pactl set-sink-mute   @DEFAULT_SINK@   toggle && $refresh_i3status
bindsym XF86AudioMicMute      exec --no-startup-id pactl set-source-mute @DEFAULT_SOURCE@ toggle && $refresh_i3status
bindsym XF86MonBrightnessUp   exec --no-startup-id brightnessctl set +5%                         && $refresh_i3status
bindsym XF86MonBrightnessDown exec --no-startup-id brightnessctl set  5%-                        && $refresh_i3status

# Use Mouse+$mod to drag floating windows to their wanted position
floating_modifier $mod

# move tiling windows via drag & drop by left-clicking into the title bar,
# or left-clicking anywhere into the window while holding the floating modifier.
tiling_drag modifier titlebar

bindcode $mod+$kc_x kill
bindcode $mod+Mod1+$kc_r reload
bindcode $mod+Mod1+Shift+$kc_r restart
bindcode $mod+Mod1+$kc_q exec "i3-nagbar -t warning -m 'You pressed the exit shortcut. Do you really want to exit i3? This will end your X session.' -B 'Yes, exit i3' 'i3-msg exit'"

bindsym $mod+space exec kitty
bindsym $mod+BackSpace exec --no-startup-id rofi -show drun -show-icons

# change focus, then reload i3status
bindcode $mod+$kc_h; focus child; focus left;  exec $refresh_i3status
bindcode $mod+$kc_j; focus child; focus down;  exec $refresh_i3status
bindcode $mod+$kc_k; focus child; focus up;    exec $refresh_i3status
bindcode $mod+$kc_l; focus child; focus right; exec $refresh_i3status

# move focused window
bindcode $mod+Shift+$kc_h move left
bindcode $mod+Shift+$kc_j move down
bindcode $mod+Shift+$kc_k move up
bindcode $mod+Shift+$kc_l move right

# focus the parent container
bindcode $mod+$kc_a focus parent

# change container layout
bindcode $mod+$kc_d layout toggle tabbed splith
bindcode $mod+shift+$kc_d split h
bindcode $mod+$kc_s layout toggle stacking splitv
bindcode $mod+shift+$kc_s split v

bindcode $mod+$kc_f fullscreen toggle
bindcode $mod+shift+$kc_f sticky toggle

bindcode $mod+$kc_g focus floating
bindcode $mod+shift+$kc_g floating toggle

bindcode $mod+$kc_m scratchpad show
bindcode $mod+shift+$kc_m move scratchpad

# Define names for default workspaces for which we configure key bindings later on.
# We use variables to avoid repeating the names in multiple places.
set $ws1   "1"
set $ws2   "2"
set $ws3   "3"
set $ws4   "4"
set $ws5   "5"
set $ws6   "6"
set $ws7   "7"
set $ws8   "8"
set $ws9   "9"
set $ws10 "10"

# switch to workspace
bindcode $mod+$kc_q workspace number $ws1; exec $refresh_i3status
bindcode $mod+$kc_w workspace number $ws2; exec $refresh_i3status
bindcode $mod+$kc_e workspace number $ws3; exec $refresh_i3status
bindcode $mod+$kc_r workspace number $ws4; exec $refresh_i3status
bindcode $mod+$kc_t workspace number $ws5; exec $refresh_i3status
bindcode $mod+$kc_y workspace number $ws6; exec $refresh_i3status
bindcode $mod+$kc_u workspace number $ws7; exec $refresh_i3status
bindcode $mod+$kc_i workspace number $ws8; exec $refresh_i3status
bindcode $mod+$kc_o workspace number $ws9; exec xdotool key Shift_Lock; exec $refresh_i3status
bindcode $mod+$kc_p workspace number $ws10; exec $refresh_i3status

# move focused container to workspace
bindcode $mod+Shift+$kc_q move container to workspace number $ws1
bindcode $mod+Shift+$kc_w move container to workspace number $ws2
bindcode $mod+Shift+$kc_e move container to workspace number $ws3
bindcode $mod+Shift+$kc_r move container to workspace number $ws4
bindcode $mod+Shift+$kc_t move container to workspace number $ws5
bindcode $mod+Shift+$kc_y move container to workspace number $ws6
bindcode $mod+Shift+$kc_u move container to workspace number $ws7
bindcode $mod+Shift+$kc_i move container to workspace number $ws8
bindcode $mod+Shift+$kc_o move container to workspace number $ws9
bindcode $mod+Shift+$kc_p move container to workspace number $ws10

bindcode $mod+$kc_semicolon workspace back_and_forth
workspace_auto_back_and_forth yes

# resize window (you can also use the mouse for that)
mode "resize" {
    # These bindings trigger as soon as you enter the resize mode

    # Pressing left will shrink the window’s width.
    # Pressing right will grow the window’s width.
    # Pressing up will shrink the window’s height.
    # Pressing down will grow the window’s height.
    bindcode $kc_j resize shrink width  10 px or 10 ppt
    bindcode $kc_k resize grow   height 10 px or 10 ppt
    bindcode $kc_l resize shrink height 10 px or 10 ppt
    bindcode $kc_semicolon resize grow   width  10 px or 10 ppt

    # same bindings, but for the arrow keys
    bindsym Left  resize shrink width  10 px or 10 ppt
    bindsym Down  resize grow   height 10 px or 10 ppt
    bindsym Up    resize shrink height 10 px or 10 ppt
    bindsym Right resize grow   width  10 px or 10 ppt

    # back to normal: Enter or Escape or $mod+r
    bindsym  Return  mode "default"
    bindsym  Escape  mode "default"
    bindcode $mod+$kc_r mode "default"
}

bindcode $mod+$kc_z mode "resize"

#   ────────────────────────────< Pretty stuff >────────────────────────────
# Set background
exec feh --bg-scale ~/Code/dotFiles/wallpaper_hollow_knight.jpg

# Font for window titles. Will also be used by the bar unless a different font
# font pango:FantasqueSansMonoNerdFont 8
font pango:monospace 0
# for_window [class=".*"] title_format "<span alpha='1'>%title</span>"
# for_window [class=".*"] title_format ""

gaps inner 10px
default_border pixel 2
# hide_edge_borders smart  # Only show borders when nececary
hide_edge_borders vertical
# smart_borders on
title_align center

# class                 border  backgr. text    indicator child_border
client.focused          #4c7899 #2c5372 #f7dec7 #2e9ef4   #285577
client.focused_inactive #373354 #4b4673 #f7dec7 #484e50   #5f676a
client.unfocused        #191726 #232136 #f7dec7 #292d2e   #222222
client.urgent           #2f343a #a04040 #f7dec7 #900000   #900000
client.placeholder      #000000 #0c0c0c #f7dec7 #000000   #0c0c0c

exec_always --no-startup-id sh ~/Code/dotFiles/polybar/launch.sh &
